package com.iusmob.adklein.demo.adapter;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.recyclerview.widget.RecyclerView;import com.iusmob.adklein.ad.AdKleinDrawVodAdListener;import com.iusmob.adklein.demo.R;import com.iusmob.adklein.demo.entity.DrawVodAdBean;import java.util.ArrayList;import java.util.List;/** * author : kele * date :  2021/6/24 11:15 * description : */public class DrawVodAdAdapter extends RecyclerView.Adapter<DrawVodAdAdapter.DrawVodViewHolder> {    private static final int TYPE_DATA = 0;    private static final int TYPE_AD = 1;    private List<DrawVodAdBean> dataList = new ArrayList<>();    public DrawVodAdAdapter() {    }    /**     * 添加数据     */    public void addData(List<DrawVodAdBean> list) {        int startPosition = dataList.size();        dataList.addAll(list);        if (startPosition <= 0) {            notifyDataSetChanged();        } else {            notifyItemRangeInserted(startPosition + 1, dataList.size() - startPosition);        }    }    /**     * 刷新数据     */    public void clearData() {        dataList.clear();        notifyDataSetChanged();    }    @NonNull    @Override    public DrawVodAdAdapter.DrawVodViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup,                                                                 int viewType) {        int layoutId = viewType == TYPE_AD ? R.layout.item_draw_vod_ad :                R.layout.item_draw_vod_data;        View view = LayoutInflater.from(viewGroup.getContext()).inflate(layoutId, viewGroup, false);        return new DrawVodAdAdapter.DrawVodViewHolder(view);    }    @Override    public void onBindViewHolder(@NonNull DrawVodAdAdapter.DrawVodViewHolder customViewHolder,                                 int position) {        int viewType = getItemViewType(position);        DrawVodAdBean item = dataList.get(position);        if (TYPE_AD == viewType) {            AdKleinDrawVodAdListener expressAd = item.getKleinNativeExpressAd();            View adView = expressAd.getMediaView(customViewHolder.container);            if (customViewHolder.container.getChildCount() > 0 && customViewHolder.container.getChildAt(0) == adView) {                return;            }            if (customViewHolder.container.getChildCount() > 0) {                customViewHolder.container.removeAllViews();            }            if (adView != null && adView.getParent() != null) {                ((ViewGroup) adView.getParent()).removeView(adView);            }            customViewHolder.container.addView(adView);            expressAd.render(customViewHolder.container);        } else {            customViewHolder.tvPage.setText(item.getTitle());            customViewHolder.tvTitle.setText("Normal Data position : " + position);        }    }    @Override    public int getItemViewType(int position) {        DrawVodAdBean data = dataList.get(position);        if (data.getKleinNativeExpressAd() != null) {            return TYPE_AD;        } else {            return TYPE_DATA;        }    }    @Override    public int getItemCount() {        if (dataList != null) {            return dataList.size();        } else {            return 0;        }    }    static class DrawVodViewHolder extends RecyclerView.ViewHolder {        public TextView tvPage;        public TextView tvTitle;        public ViewGroup container;        DrawVodViewHolder(View view) {            super(view);            tvPage = view.findViewById(R.id.tv_page);            tvTitle = view.findViewById(R.id.tv_title);            container = view.findViewById(R.id.express_ad_container);        }    }}